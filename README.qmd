---
format: gfm
knitr:
  opts_chunk:
    comment: '#>'
    collapse: true
    fig-path: "man/figures/README-"
execute:
  warning: false
  message: true
fig-dpi: 150
---

<!-- README.md is generated from README.Rmd. Please edit that file -->

# cwi <img src="man/figures/logo.png" align="right" />

<!-- badges: start -->
![version](https://img.shields.io/github/r-package/v/ct-data-haven/cwi?style=flat-square&color=%230099FF)
[![check-package](https://img.shields.io/github/actions/workflow/status/ct-data-haven/cwi/check-package.yaml?label=check-package&style=flat-square)](https://github.com/CT-Data-Haven/cwi/actions/workflows/check-package.yaml)
[![pkgdown](https://img.shields.io/github/actions/workflow/status/ct-data-haven/cwi/pkgdown.yaml?label=pkgdown&style=flat-square)](https://github.com/CT-Data-Haven/cwi/actions/workflows/pkgdown.yaml)
[![Codecov test coverage](https://img.shields.io/codecov/c/github/ct-data-haven/cwi?style=flat-square)
](https://app.codecov.io/gh/CT-Data-Haven/cwi?branch=main)
<!-- badges: end -->


The original goal of `cwi` was to get data, primarily the Census ACS, fetched, aggregated, and analyzed for [DataHaven's 2019 Community Index reports](http://ctdatahaven.org/reports/greater-new-haven-community-index). It's now evolved to support more of our day-to-day work and several major reports. This includes functions to speed up and standardize analysis for multiple staff people, preview trends and patterns we'll need to write about, and get data in more layperson-friendly formats.

It pairs well with many functions from Camille's brilliantly-named [`camiller`](https://github.com/camille-s/camiller) package.

## Installation

You can install this package from [GitHub](https://github.com/CT-Data-Haven/cwi) with:

``` r
# install.packages("devtools")
devtools::install_github("CT-Data-Haven/cwi")
```

## Dependencies

This package relies heavily on:

* The [`tidyverse`](http://tidyverse.org/) packages, namely `dplyr`, `tidyr`, `purrr`, `stringr`, `forcats`, and `ggplot2` (version >= 3.0.0) (so a lot the tidyverse)
* `rlang` and `tidyselect` for non-standard evaluation in many functions
* `tidycensus` for actually getting all the Census data
* `sf` isn't required but it's encouraged

## Data

`cwi` ships with several datasets and shapefiles. These include:

* Shapes (as `sf` objects) of towns, tracts, and city neighborhoods for New Haven, Hartford, Bridgeport, and Stamford
* Common ACS table numbersâ€”hopefully decreases time spent prowling around [the Census Bureau site](https://data.census.gov)
* Definitions of neighborhoods by tract or block group, and of regions by town

## Sources

This package contains functions to make it easier and more reproducible to fetch and analyze data from:

* [American Community Survey](https://www.census.gov/programs-surveys/acs/) (US Census Bureau)
* [Decennial Census](https://www.census.gov/programs-surveys/decennial-census.html) (US Census Bureau)
* [Quarterly Workforce Indicators](https://lehd.ces.census.gov/) (US Census Bureau Center for Economic Studies)
* [Local Area Unemployment Statistics](https://www.bls.gov/lau/) (Bureau of Labor Statistics)
* ~~[DataHaven's Community Wellbeing Survey](https://ctdatahaven.org/reports/datahaven-community-wellbeing-survey)~~ This has been moved to the dcws package 


## Example

Here's an example of getting a big table to calculate homeownership rates across many geographies at once:

```{r}
#| label: libs
#| message: false
library(dplyr)
library(cwi)
```

```{r }
#| label: fetch
tenure <- multi_geo_acs(
    table = basic_table_nums$tenure,
    year = 2020,
    regions = regions[c("Greater New Haven", "New Haven Inner Ring", "New Haven Outer Ring")],
    counties = "New Haven",
    towns = regions[["Greater New Haven"]],
    us = TRUE
)
tenure
```


```{r }
#| label: homeownership-rates
homeownership <- tenure |>
    label_acs(year = 2020) |>
    dplyr::group_by(level, name) |>
    camiller::calc_shares(group = label, denom = "Total") |>
    dplyr::filter(stringr::str_detect(label, "Owner")) |>
    dplyr::select(level, name, share)

homeownership
```

```{r }
#| label: tenure-plot
geo_level_plot(homeownership,
    value = share, hilite = "#EA7FA2",
    title = "Homeownership in Greater New Haven, 2020"
)
```

See more detail in the vignette: `vignette("cwi")`.
